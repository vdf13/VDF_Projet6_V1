# **Pseudo Code for P6** 

PARTIE Algorythme principal

Lancer programme avec nom du fichier + argument ( connect, install, configure, auto, test)
	#  Connect	Ouverture du fichier yml et se connecte en ssh sur l'adresse IP contenu dans le fichier yml
	#  Install 	Ouverture du fichier yml et installe sur le serveur le role contenu dans le fichier yml
	#  Configure	Ouverture du fichier yml et configure sur le serveur le role contenu dans le fichier yml
        #  Test 	Ouverture du fichier yml et vérifie la présence dans le fichier yml du champ connect, role_name, title
        #  Auto 	Test, connect, install, configure

Lire les arguments lors du lancement du programme

Si **connect** alors
    Chercher adresse_IP dans le fichier (variable fixé a admin)
    lancer *ouverture_fichier_yml*
	Récupérer valeurs IP et user 
	Se Connecter a la machine en ssh (clé déjà installé donc pas de mot de passe) user@IP
    sinon: 
        Exception 
        *ecrire_fichier_log* message:  Problème de connexion ssh
    Test de réponse du serveur
        Si réponse alors:
            lancer *commande ls* pour tester le retour de l'information
        Sinon:
            exception
            	*ecrire_fichier_log* message : Problème de connexion ssh
       
Si **install** alors
    Lancer *ouverture_fichier_yml*
	Récupérer role_name et title
	Si role_name + title = dhcp
		package = dhcp
		envoi via fonction connect_ssh la commande installation "package"
			Si le package est correctement installé
				Ecrire log OK service "package" installé
			Sinon 
				Ecrire log message: Erreur package pas installé

	Si role_name + title = dns
		package = dns
		envoi via fonction connect_ssh la commande installation "package"
			Si le package est correctement installé
				Ecrire log OK service "package" installé
			Sinon 
				Ecrire log message: Erreur package pas installé
	Sinon
		Role dhcp ou dns non trouvé
		Ecrire log message: Erreur pas de role name trouvé

Si **configure** alors
    Lancer *ouverture_fichier_yml*
	Récupérer role_name et title
	Si role_name + title = dhcp
		Création objet fichier dhcpd.conf
		Copie du fichier généré sur le répertoire /tmp/ du serveur
		Création objet fichier isc-dhcp-server
		Copie du fichier généré sur le répertoire /tmp/ du serveur
		Copie des 2 fichiers du répertoire /tmp/ vers les répertoire /etc/dhcp et /etc/default
	Si role_name + title = dns
		Création objet fichier named.conf
		Copie du fichier généré sur le répertoire /tmp/ du serveur
		Création objet fichier zone
		Copie du fichier généré sur le répertoire /tmp/ du serveur
		Copie des 2 fichiers du répertoire /tmp/ vers les répertoire /etc/bind et /etc/default
	Sinon:
		Ecrire log message: Erreur pas de role name trouvé	

      
Si **auto** alors
	Effectuer action test
	Effectuer action connect
	Effectuer action install
	Effectuer action configure

sinon
	Ecrire log message: Erreur commande n'est pas correcte, choisir connect, install, configure, auto, test	


Si **test** alors
    Chercher adresse_IP dans le fichier (variable fixé a admin)
    lancer *ouverture_fichier*
	Si 'connect' 'role_name' 'title' présent dans le fichier yml
		
    Test de réponse du serveur
        Si réponse alors:
            lancer *ouverture_fichier*
            Chercher rôle dans fichier
                Si role trouvé alors:
                    Visualiser le role demandé et la confirmation de test
                    Si oui 
                        lancer *test_role* 
                    si non
                        Terminer programme 
                        *ecrire_fichier_log* avec "test rôle abandonnée"
                sinon:
                    exception
                    *ecrire_fichier_log* avec pas de test rôle trouvé
        Sinon:
            exception
            *ecrire_fichier_log* avec connexion pas possible

--------------            
PARTIE Algorythme des classes

class Dns_zone:
	Création de l'objet avec les Attributs de la classe, nom fichier, dictionnaire défaut.
	Ouverture_fichier_yml
	Substitution du dictionnaire défaut par les valeurs du fichier yml
	Chercher dans le document template les clés du dictionnaire
	Remplacer la valeur associé à la clé dans le document par la valeur du dictionnaire
	Ecrire le fichier de sortie après modification dans le répertoire ~/resultat

class Dns_named
	Création de l'objet avec les Attributs de la classe, nom fichier, dictionnaire défaut.
	Ouverture_fichier_yml
	Substitution du dictionnaire défaut par les valeurs du fichier yml
	Chercher dans le document template les clés du dictionnaire
	Remplacer la valeur associé à la clé dans le document par la valeur du dictionnaire
	Ecrire le fichier de sortie après modification dans le répertoire ~/resultat

class Dhcpdconf
	Création de l'objet avec les Attributs de la classe, nom fichier, dictionnaire défaut.
	Ouverture_fichier_yml
	Substitution du dictionnaire défaut par les valeurs du fichier yml
	Chercher dans le document template les clés du dictionnaire
	Remplacer la valeur associé à la clé dans le document par la valeur du dictionnaire
	Ecrire le fichier de sortie après modification dans le répertoire ~/resultat

class Iscdhcpserver
	Création de l'objet avec les Attributs de la classe, nom fichier, dictionnaire défaut.
	Ouverture_fichier_yml
	Substitution du dictionnaire défaut par les valeurs du fichier yml
	Chercher dans le document template les clés du dictionnaire
	Remplacer la valeur associé à la clé dans le document par la valeur du dictionnaire
	Ecrire le fichier de sortie après modification dans le répertoire ~/resultat

-----------
PARTIES Algorythme des Fonctions


*OUVERTURE_FICHIER_YML ou OUVERTURE_FICHIER*
	ouvrir fichier yaml
	lire fichier yaml
	charger les données dans une variable $contenu
	fermer le fichier
	exception
		*ecrire_fichier_log* avec problème ouverture du fichier, présence, ...

*ECRITURE_FICHIER*
	ouvrir fichier sortie
	écrire le texte modifié dans le fichier sortie
	fermer le fichier
	exception
        	*ecrire_fichier_log* avec problème écriture du fichier, présence, ...

*ECRITURE_LOG*
   	ouvrir fichier log
  	écrire le texte erreur dans le fichier log
	fermer le fichier log
    
*CONNECT_SSH*
	Récupérer le user et IP du serveur
	Ouvrir canal ssh avec le serveur
	Envoyer les commandes sur le serveur via le canal ssh
	Ecrire log en cas de réussite
	exception
		*ecrire_fichier_log* avec problème de connexion ssh
	
*COPIE_SCP*
	Récupérer le user et IP du serveur
	copier le fichier résultat sur le répertoire /tmp/
	Ecrire log en cas de réussite
	exception
		*ecrire_fichier_log* avec problème de création du fichie

    
*TEST_ROLE*
    lancer *ouverture_fichier*
    Lire $donnee_yaml en lien avec $role et chercher la partie $test_role associé
    lancer la commande test associé au role testé
    si exception:
        *ecrire_fichier_log* avec erreur de test
    sinon: 
        afficher message FIN d'installation


*ECRIRE_FICHIER_LOG*
    ouvrir fichier log
    récupérer message personnalisé et ecrire le fichier log   exemple: /var/log/programme_ICS
    fermer fichier log

